name: Rust

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**/*.rs"
<<<<<<< HEAD
      - "Cargo.toml"
      - "Cargo.lock"
=======
>>>>>>> origin/osbookday02b
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**/*.rs"
<<<<<<< HEAD
      - "Cargo.toml"
      - "Cargo.lock"
=======
>>>>>>> origin/osbookday02b

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
<<<<<<< HEAD
=======

>>>>>>> origin/osbookday02b
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

<<<<<<< HEAD
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Install UEFI target
        run: rustup target add x86_64-unknown-uefi

      - name: Run clippy
        run: cargo clippy --target x86_64-unknown-uefi --all-features -- -D warnings

      - name: Build for UEFI
        run: cargo build --target x86_64-unknown-uefi --release
=======
      - name: Format code
        run: |
          cargo fmt --all

      - name: push changes
        id: push-changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git remote set-url origin https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}
          git config --global user.email "23025996+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git config pull.rebase true
          if (git diff --shortstat | grep '[0-9]'); then \
            git add .; \
            git commit -m "Automated Cargo fmt changes"; \
            git pull origin ${{github.event.pull_request.head.ref}}; \
            git push origin HEAD:${{github.event.pull_request.head.ref}}
          fi

      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Run tests
        run: cargo test --verbose
>>>>>>> origin/osbookday02b
